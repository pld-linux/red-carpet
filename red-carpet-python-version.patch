diff -Nuard red-carpet.orig/configure.in red-carpet/configure.in
--- red-carpet.orig/configure.in	2003-09-05 21:19:01.000000000 +0200
+++ red-carpet/configure.in	2003-09-14 16:38:46.000000000 +0200
@@ -76,7 +76,7 @@
 PYTHON_PREFIX=`$PYTHON -c "import sys; print sys.prefix"`
 AC_SUBST(PYTHON_PREFIX)
 
-PYTHON_INCLUDES=-I$PYTHON_PREFIX/include/python2.2
+PYTHON_INCLUDES=-I$PYTHON_PREFIX/include/python2.3
 AC_SUBST(PYTHON_INCLUDES)
 
 PKG_CHECK_MODULES(GTK, gtk+-2.0)
@@ -98,7 +98,7 @@
 PYGTK_CODEGEN=$PYGTK_PREFIX/bin/pygtk-codegen-2.0
 AC_SUBST(PYGTK_CODEGEN)
 
-PYGTK_IMPORTDIR=$PYGTK_PREFIX/lib/python2.2/site-packages
+PYGTK_IMPORTDIR=$PYGTK_PREFIX/lib/python2.3/site-packages
 AC_SUBST(PYGTK_IMPORTDIR)
 
 dnl **************************************************************************
diff -Nuard red-carpet.orig/red_extra/Makefile.am red-carpet/red_extra/Makefile.am
--- red-carpet.orig/red_extra/Makefile.am	2003-02-07 16:53:55.000000000 +0100
+++ red-carpet/red_extra/Makefile.am	2003-09-14 16:38:52.000000000 +0200
@@ -8,7 +8,7 @@
 
 EXTRA_DIST = $(defs_DATA)
 
-pythondir=$(PYGTK_PREFIX)/lib/python2.2
+pythondir=$(PYGTK_PREFIX)/lib/python2.3
 pkgpythondir = $(pythondir)/gtk-2.0
 pkgpyexecdir = $(pythondir)/gtk-2.0
 
diff -Nuard red-carpet.orig/src/red_depcomponent.py red-carpet/src/red_depcomponent.py
--- red-carpet.orig/src/red_depcomponent.py	2003-05-15 22:05:20.000000000 +0200
+++ red-carpet/src/red_depcomponent.py	2003-09-14 17:12:25.000000000 +0200
@@ -41,7 +41,7 @@
     return map(filter_dep, dep_list)
 
 
-class DepComponent(gobject.GObject, red_component.Component):
+class DepComponent(red_component.Component):
 
     def __init__(self, install_packages=[], remove_packages=[], verify=0):
         gobject.GObject.__init__(self)
diff -Nuard red-carpet.orig/src/red_settings.py red-carpet/src/red_settings.py
--- red-carpet.orig/src/red_settings.py	2003-04-01 20:16:46.000000000 +0200
+++ red-carpet/src/red_settings.py	2003-09-15 01:23:26.000000000 +0200
@@ -61,6 +61,16 @@
 
         return self.__public.get(section, option)
 
+    def getboolean(self, path):
+        section, option, default = self.parse_path(path)
+        if not self.__public.has_section(section) or \
+           not self.__public.has_option(section, option):
+            if default:
+                return default
+            return ""
+
+        return self.__public.getboolean(section, option)
+
     def set(self, path, value):
         section, option, default = self.parse_path(path)
         if not self.__public.has_section(section):
@@ -140,7 +150,7 @@
         if os.environ.has_key("USER"):
             user_path += "=" + os.environ["USER"]
 
-        self.local =    int(config.get("daemon/local=1"))
+        self.local =    config.getboolean("daemon/local=1")
         self.user =     config.get(user_path)
         self.password = config.get_private("daemon/pass")
 
